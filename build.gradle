plugins {
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}

group = 'edu.pwr'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

sourceSets {
    remoteTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/remoteTest/java')
        }
        resources.srcDir file('src/remoteTest/resources')
    }
}

configurations {
    remoteTestCompile.extendsFrom testCompile
    remoteTestRuntime.extendsFrom testRuntime
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'io.springfox:springfox-swagger2:2.9.2'
    compile 'io.springfox:springfox-swagger-ui:2.9.2'

    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.6.0'
    compile 'com.sendgrid:sendgrid-java:4.4.8'

    compile 'com.github.javafaker:javafaker:1.0.2'

    compile 'com.auth0:java-jwt:3.8.3'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testCompile('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    remoteTestCompile 'com.h2database:h2'
    remoteTestCompile 'org.springframework.cloud:spring-cloud-starter-openfeign:2.2.2.RELEASE'
    remoteTestCompile('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    testCompile 'org.assertj:assertj-core:3.11.1'
}

test {
    useJUnitPlatform()
}

task remoteTest(type: Test) {
    useJUnitPlatform()
    testClassesDirs = sourceSets.remoteTest.output.classesDirs
    classpath = sourceSets.remoteTest.runtimeClasspath
    outputs.upToDateWhen { false }
}